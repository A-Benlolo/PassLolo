package utilities;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;

import javax.swing.JTable;
import javax.swing.table.JTableHeader;

import com.itextpdf.kernel.color.Color;

public class PrintableTable implements Printable {
	private String title;
	private JTable table;
	
	public PrintableTable(String title, JTable table) {
		this.title = title;
		this.table = table;
	}
	
	public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
		// Only one page
        if (pageIndex > 0)
            return NO_SUCH_PAGE;

        // Update the coordinates to be in the correct spot
        Graphics2D g2d = (Graphics2D)graphics;
        g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

        // Save the default font
        Font defaultFont = graphics.getFont();
        
        // Draw the title
        String fullTitle = "PassLolo Vault: "+title;
        Font titleFont = defaultFont.deriveFont(32f);
        Rectangle rect = new Rectangle((int)pageFormat.getImageableX(), (int)pageFormat.getImageableY(), (int)pageFormat.getImageableWidth(), (int)pageFormat.getImageableHeight());
        
        // Get the FontMetrics
        FontMetrics metrics = graphics.getFontMetrics(titleFont);
        
        // Determine the X coordinate for the text
        int x = rect.x + (rect.width - metrics.stringWidth(fullTitle)) / 2;
        
        // Set the font
        graphics.setFont(titleFont);
        
        // Draw the the title
        graphics.drawString(fullTitle, x, 50);


        
        
		JTableHeader tableHeaderComp = table.getTableHeader();
		int totalWidth = tableHeaderComp.getWidth() + table.getWidth();
		int totalHeight = tableHeaderComp.getHeight() + table.getHeight();
		BufferedImage tableImage = new BufferedImage(totalWidth, totalHeight, BufferedImage.TYPE_INT_RGB);
		tableHeaderComp.paint(g2d);
		g2d.translate(0, tableHeaderComp.getHeight());
		table.paint(g2d);
		
		graphics.drawImage(tableImage, 50, 50, pageFormat.getImageableWidth(), pageFormat.getImageableHeight(), Color.WHITE, new ImageObserver());
        
        
        
        
        /* tell the caller that this page is part of the printed document */
        return PAGE_EXISTS;
	}

}
